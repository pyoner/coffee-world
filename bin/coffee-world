#!/usr/bin/env coffee

# requires
cp = require 'child_process'
cssCompiler = require '../lib/cssCompiler.coffee'
fs = require 'fs'

# globals
cssMappings =
    boxShadowAll: (value) ->
        WebkitBoxShadow: value
        MozBoxShadow: value
        boxShadow: value

findMappings =
    'find . -iname *.css.coffee': (file) ->
        cssCompiler.compileFile file, cssMappings
    'find . -iname *.js ! -iname *.min.js': (file) ->
        cp.exec "uglifyjs -nc \"#{file}\"", (err, stdout, stderr) ->
            newFile = file.replace /\.js$/i, '.min.js'
            fs.writeFile newFile, stdout, (err) ->
                console.log 'Written ' + newFile

watchedFiles = {}

# functions
poller = () ->
    for findCommand, compileFunction of findMappings
        cp.exec findCommand, (error, stdout, stderr) ->
            fileList = stdout.split('\n')
            for file in fileList
                compileIfNeeded file, compileFunction if file != ''

compileIfNeeded = (file, compileFunction) ->
	fs.stat file, (err, stats) ->
		oldModifiedTime = watchedFiles[file]
		newModifiedTime = new Date(stats.mtime)
		watchedFiles[file] = newModifiedTime
		if newModifiedTime > oldModifiedTime
		    compileFunction file

# main
setInterval poller, 1000